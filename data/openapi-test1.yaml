info:
  title: Tufin
  version: 1.0.0
openapi: 3.0.3
x-extension-test: 
tags:
- name: security
  description: control security
  x-extension-test: 
- name: reuven
  description: Harrison
servers: 
- url: tufin.com
  x-extension-test: 
paths:
  /api/{domain}/{project}/badges/security-score:
    x-extension-test: 
    get:
      x-extension-test: 
      tags:
        - security
      parameters:
      - in: query
        name: filter
        x-extension-test: 
        content:
          application/json:
            x-extension-test: 
            schema:
              type: object
              properties:
                type:
                  type: string
                color:
                  type: string
      - in: header
        name: user
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      - in: cookie
        name: test
        content:
          application/json:
            schema:
              type: object
      - in: query
        name: image
        schema:
          description: alphanumeric 
          example: tufinim/generic-bank:cia-latest
          format: general string
          pattern: ^(?:[\w-./:]+)$
          type: string
      - in: query
        name: token
        schema:
          description: RFC 4122 UUID
          example: 26734565-dbcc-449a-a370-0beaaf04b0e8
          format: uuid
          pattern: ^(?:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})$
          type: string
      - in: header
        name: X-Auth-Name
        required: true
        schema:
          description: empty string
          format: empty string
          pattern: ^(?:)$
          type: string
      - in: path
        name: domain
        required: true
        schema:
          description: Hyphen-separated list of lowercase string
          example: generic-bank
          format: hyphen-separated list
          pattern: ^(?:([a-z]+-)*([a-z]+)?)$
          type: string
      - in: path
        name: project
        required: true
        schema:
          description: Lowercase string
          example: retail
          format: lowercase string
          pattern: ^(?:[a-z]+)$
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: none
          content:
            application/xml:
              schema:
                type: string
      servers: []
  /api/{domain}/{project}/install-command:
    get:
      parameters:
      - in: header
        name: X-Auth-Name
        required: true
        schema:
          description: any string
          example: Joe
          format: any string
          pattern: ^(?:.*)$
          type: string
      - in: path
        name: domain
        required: true
        schema:
          enum:
          - generic-bank
          - tufin
          type: string
      - in: path
        name: project
        required: true
        schema:
          enum:
          - retail
          - my-project
          - test
          - eks
          type: string
      - in: header
        name: network-policies
        schema: 
          $ref: '#/components/schemas/network-policies'
      responses:
        default:
          description: Tufin1
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
      servers: []
  /subscribe:
    post:
      summary: Subscribe to a webhook
      callbacks:   # Callback definition
        myEvent:   # Event name
          'hi':
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        message:
                          type: number
                          example: Some event happened
                      required:
                        - message
                    encoding:
                      historyMetadata:
                        # require XML Content-Type in utf-8 encoding
                        contentType: application/xml; charset=utf-8
                      profileImage:
                        # only accept png/jpeg
                        contentType: image/png, image/jpeg
                        headers:
                          i:
                            schema:
                              type: integer
                            description: integer
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
      responses:
        default:
          description: Tufin
  /register:
    post:
      summary: Subscribe to a webhook
      responses:
        default:
          description: Tufin
components:
  schemas:
    network-policies:
      additionalProperties: true
      properties:
        netpols:
          type: string
      type: object
    rules:
      properties:
        netpols:
          type: string
      type: object      
  parameters:
      network-policies:
        name: network-policies
        in: header
        schema: 
          $ref: '#/components/schemas/network-policies'
  headers:
    test:
      schema: 
        $ref: '#/components/schemas/network-policies'
    new:
      schema: 
        $ref: '#/components/schemas/network-policies'
    testc:
      content: 
        application/json:
          schema:
            type: object
  requestBodies:
      reuven:
        content:
          application/json:
            schema:
              type: object
              properties: 
                meter_name:
                    type: string
                tenant:
                  type: string
                meter_value:
                  type: number
                time:
                  type: integer
                dimensions:
                  type: object
