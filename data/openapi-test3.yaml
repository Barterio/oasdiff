info:
  title: Tufin
  version: 1.0.0
openapi: 3.0.3
paths:
  /api/{domain}/{project}/badges/security-score:
    get:
      parameters:
      - in: query
        name: image
        schema:
          not:
            description: alphanumeric with underscore, dash, period, slash and colon
            example: tufinim/generic-bank:cia-latest
            format: general string
            pattern: ^(?:[\w-./:]+)$
            type: string
      - in: query
        name: token
        schema:
          description: RFC 4122 UUID
          example: 26734565-dbcc-449a-a370-0beaaf04b0e8
          format: uuid
          pattern: ^(?:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})$
          type: string
      - in: header
        name: X-Auth-Name
        required: true
        schema:
          description: empty string
          format: empty string
          pattern: ^(?:)$
          type: string
      - in: path
        name: domain
        required: true
        schema:
          description: Hyphen-separated list of lowercase string
          example: generic-bank
          format: hyphen-separated list
          pattern: ^(?:([a-z]+-)*([a-z]+)?)$
          type: string
      - in: path
        name: project
        required: true
        schema:
          description: Lowercase string
          example: retail
          format: lowercase string
          pattern: ^(?:[a-z]+)$
          type: string
      responses:
        default:
          description: Tufin
      servers: []
  /api/{domain}/{project}/install-command:
    get:
      parameters:
      - in: header
        name: X-Auth-Name
        required: true
        schema:
          description: any string
          example: Joe
          format: any string
          pattern: ^(?:.*)$
          type: string
      - in: path
        name: domain
        required: true
        schema:
          enum:
          - tufin
          - generic-bank
          type: string
      - in: path
        name: project
        required: true
        schema:
          enum:
          - retail
          - my-project
          - test
          - eks
          - test1
          type: string
      responses:
        default:
          description: Tufin
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per min.
      servers: []
  /register:
    post:
      summary: Subscribe to a webhook
      callbacks:   # Callback definition
        myEvent:   # Event name
          'hi':
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
      responses:
        default:
          description: Tufin
  /subscribe:
    post:
      summary: Subscribe to a webhook
      callbacks:   # Callback definition
        myEvent:   # Event name
          'hi':
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        message:
                          type: string
                          example: Some event happened
                      required:
                        - message
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
          '{$request.body#/callbackUrl}':   # The callback URL,
                                            # Refers to the passed URL
            post:
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        message:
                          type: string
                          example: Some event happened
                      required:
                        - message
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
      responses:
        default:
          description: Tufin
components:
  callbacks:
    test:  
      'reuven':
        post:
          requestBody:   
            required: true
            content:
              application/json:
                schema:
                  type: object
          responses:   
            '200':
              description: Your server returns this code if it accepts the callback
